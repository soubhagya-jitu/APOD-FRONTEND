{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soubh\\\\OneDrive\\\\Desktop\\\\PROJECT\\\\APOD PROJECT FRONTEND1\\\\Apod-project\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    date: \"\"\n  });\n  const [image, setImage] = useState(abc());\n  const [information, setInformation] = useState();\n  const abc = async () => {\n    let res = await fetch(\"https://api.nasa.gov/planetary/apod?api_key=8G0GNfFlRVtkuMhq3nfzH9bbxwhNLGjGDvmHXO2V\");\n    let result = await res.json();\n    return setImage(result.data.url);\n    // setInformation(result.data.explanation)\n  };\n\n  let name, value;\n  const handleInputs = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setData({\n      ...data,\n      [name]: value\n    });\n  };\n  const postData = async e => {\n    e.preventDefault();\n    const {\n      date\n    } = data;\n    const res = await fetch(\"http://localhost:4000/apod-image\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date\n      })\n    });\n    const result = await res.json();\n    console.log(result);\n    if (!result.status) {\n      window.alert(result.message);\n    } else {\n      setImage(result.data.url);\n      setInformation(result.data.explanation);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter a date to get the Astronomy Picture of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card1\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"date\",\n        id: \"date\",\n        autoComplete: \"off\",\n        value: data.date,\n        onChange: handleInputs,\n        placeholder: \"YYYY-MM-DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Get Image\",\n        id: \"submit\",\n        onClick: postData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"noimage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Explanation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: information\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n_s(App, \"9aK282iq2tyi4HAVNL27ocxIfLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","data","setData","date","image","setImage","abc","information","setInformation","res","fetch","result","json","url","name","value","handleInputs","e","target","postData","preventDefault","method","headers","body","JSON","stringify","console","log","status","window","alert","message","explanation"],"sources":["C:/Users/soubh/OneDrive/Desktop/PROJECT/APOD PROJECT FRONTEND1/Apod-project/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./style.css\"\r\n\r\n\r\n\r\nfunction App() {\r\n    const [data, setData] = useState({\r\n        date: \"\"\r\n    })\r\n    const [image,setImage] = useState(abc())\r\n    const [information,setInformation] = useState()\r\n\r\n    \r\n    const abc = async ()=> {\r\n        let res = await fetch(\"https://api.nasa.gov/planetary/apod?api_key=8G0GNfFlRVtkuMhq3nfzH9bbxwhNLGjGDvmHXO2V\")\r\n        let result= await res.json()\r\n        return setImage(result.data.url)\r\n        // setInformation(result.data.explanation)\r\n    }\r\n    let name, value\r\n    const handleInputs = (e) => {\r\n        name = e.target.name\r\n        value = e.target.value\r\n        setData({ ...data, [name]: value })\r\n    }\r\n    const postData = async (e) => {\r\n        e.preventDefault()\r\n        const { date } = data\r\n        const res = await fetch(\"http://localhost:4000/apod-image\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                date\r\n            })\r\n        })\r\n\r\n        const result = await res.json()\r\n        console.log(result)\r\n        if (!result.status) {\r\n            window.alert(result.message)\r\n        } else {\r\n            setImage(result.data.url)\r\n            setInformation(result.data.explanation)\r\n            \r\n        }\r\n        \r\n    }\r\n    return (\r\n            <div className=\"main-card\">\r\n                <h1>Enter a date to get the Astronomy Picture of the day</h1>\r\n                <div className=\"card1\">\r\n                    <input type=\"text\" name=\"date\" id=\"date\" autoComplete=\"off\" value={data.date} onChange={handleInputs} placeholder=\"YYYY-MM-DD\"></input>\r\n                    <input type=\"submit\" value=\"Get Image\" id=\"submit\" onClick={postData}></input>\r\n                </div>\r\n                <img src={image} alt=\"noimage\"></img>\r\n                <h3>Explanation</h3>\r\n                <p>{information}</p>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAA;AAIpB,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC;IAC7BI,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,GAAG,EAAE,CAAC;EACxC,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGT,QAAQ,EAAE;EAG/C,MAAMO,GAAG,GAAG,YAAW;IACnB,IAAIG,GAAG,GAAG,MAAMC,KAAK,CAAC,sFAAsF,CAAC;IAC7G,IAAIC,MAAM,GAAE,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC5B,OAAOP,QAAQ,CAACM,MAAM,CAACV,IAAI,CAACY,GAAG,CAAC;IAChC;EACJ,CAAC;;EACD,IAAIC,IAAI,EAAEC,KAAK;EACf,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACJ,IAAI;IACpBC,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;IACtBb,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACa,IAAI,GAAGC;IAAM,CAAC,CAAC;EACvC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAOF,CAAC,IAAK;IAC1BA,CAAC,CAACG,cAAc,EAAE;IAClB,MAAM;MAAEjB;IAAK,CAAC,GAAGF,IAAI;IACrB,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MACxDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBtB;MACJ,CAAC;IACL,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC/Bc,OAAO,CAACC,GAAG,CAAChB,MAAM,CAAC;IACnB,IAAI,CAACA,MAAM,CAACiB,MAAM,EAAE;MAChBC,MAAM,CAACC,KAAK,CAACnB,MAAM,CAACoB,OAAO,CAAC;IAChC,CAAC,MAAM;MACH1B,QAAQ,CAACM,MAAM,CAACV,IAAI,CAACY,GAAG,CAAC;MACzBL,cAAc,CAACG,MAAM,CAACV,IAAI,CAAC+B,WAAW,CAAC;IAE3C;EAEJ,CAAC;EACD,oBACQ;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAA,UAAI;IAAoD;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7D;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,YAAY,EAAC,KAAK;QAAC,KAAK,EAAE/B,IAAI,CAACE,IAAK;QAAC,QAAQ,EAAEa,YAAa;QAAC,WAAW,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS,eACvI;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,WAAW;QAAC,EAAE,EAAC,QAAQ;QAAC,OAAO,EAAEG;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5E,eACN;MAAK,GAAG,EAAEf,KAAM;MAAC,GAAG,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAO,eACrC;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAA,UAAIG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAGlB;AAAC,GAzDQP,GAAG;AAAA,KAAHA,GAAG;AA2DZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}